// ApControl.h -- Audio Processor Control Functions Header
//

#ifndef _APCONTROL_H_
#define _APCONTROL_H_

//#include "stm32f4xx_hal_def.h"
#include <stdint.h>

#define ENABLE_DUMPS	1
#define ENABLE_LOADS	1
#define VERIFY_LOADS	1

#define AP_I2C_ADDR				0x40
#define AP_I2C_HANDLE			hi2c1

#define AP_CHANNELS				0x08
#define AP_BQPERCHANNEL		0x0a
#define AP_COEFPERBQ			0x05
#define AP_REGFILESZ			0x90

#define AP_BQCOEF_BASE		0x000
#define AP_PRESCALE_BASE	0x190
#define	AP_POSTSCALE_BASE	0x198
#define AP_MIX1COEF_BASE	0x1a0
#define AP_MIX2COEF_BASE	0x1e0

#ifdef __cplusplus 
extern "C" {
#endif


typedef struct regRange {
	uint8_t Bgn;
	uint8_t End;
} regRange_t;

typedef enum eApRegRange {
	erConfig 				= 0,
	erMasterMute,
	erMasterVolume,
	erChnxVolume,
	erChnxMuteVolBPTrim,
	erChnxyInputMap,
	erAutoMode,
	erPresetEq,
	erEqBandx,
	erChnLoopCtl,
	erBypassCtl,
	erBaseTrebleCtl,
	erChLimitSels,
	erLim12Cfgs,
	erPwmTimings,
	erI2sOutMaps,
	erCoefBlk,
	erExtLimitDrc,
	erFineVol,
	erPcmRecomb,
	erExtLimitTbl,
	erRmsCtlBlk,
	erPllCtlBlk,
	erPllSts,
	erExtBiquadBlk,
	erRmsStatusBlk,
	erDpt,
	erCfr129,
	erPopSuppresTimes,
} eApRegRange_t;

typedef struct rawCoef {
	uint8_t coefHi;
	uint8_t coefMi;
	uint8_t coefLo;
} rawCoef_t;

static inline int32_t rawCoefToInt(rawCoef_t *p) {
	return ((p->coefHi<<16)||(p->coefMi<<8)||(p->coefLo<<0));
}

static inline rawCoef_t rawCoefFromInt(int32_t coef) {
	rawCoef_t x;
	x.coefHi = (coef>>16)&0xff;
	x.coefMi = (coef>>8)&0xff;
	x.coefLo = coef&0xff;
	return x;
}
typedef struct bqCoefBlk {
	rawCoef_t BqB1;
	rawCoef_t BqB2;
	rawCoef_t BqA1;
	rawCoef_t BqA2;
	rawCoef_t BqB0;
} bqCoefBlk_t;

#ifdef INSTANTIATE_AP_DATA

uint8_t ApRegFile[AP_REGFILESZ] = {
	//I2C Register File:
	0x9b,0x00,0x21,0xfe,0x00,0x00,0x00,0x7a,0x80,0x00,0x00,0x60,0x60,0x60,0x60,0x60,
	0x60,0x60,0x60,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x32,0x54,0x76,0x00,
	0x80,0x01,0xa0,0x0f,0x0f,0x0f,0x0f,0x0f,0x00,0x00,0x00,0x00,0x77,0x00,0x00,0x6a,
	0x69,0x6a,0x69,0x40,0x62,0x51,0x73,0x10,0x32,0x54,0x76,0x01,0xad,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x2d,0x00,0x00,
	0x33,0x00,0x00,0x00,0x00,0xda,0xda,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x20,
	0x20,0x20,0x60,0x60,0x60,0x33,0x33,0x33,0x1b,0x1b,0x1b,0x30,0x30,0x2f,0x2f,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x10,0x00,0xa5,0x00,0x03,0x00,0x00,
	0x18,0x09,0x00,0xff,0xf7,0xc1,0x00,0x7a,0x80,0x00,0x00,0x60,0x60,0x60,0x60,0x60,
};

regRange_t ApRegRanges[] = {
	{0x00,0x08},		// erConfig
	{0x09,0x09},		// erMasterMute
	{0x0a,0x0a},		// erMasterVolume
	{0x0b,0x12},		// erChanVolume
	{0x13,0x1a},		// erChnxMuteVolBPTrim
	{0x1b,0x1e},		// erChnxyInputMap
	{0x1f,0x21},		// erAutoMode
	{0x22,0x22},		// erPresetEq
	{0x23,0x27},		// erEqBandx
	{0x28,0x29},		// erChnLoopCtl
	{0x2a,0x2b},		// erBypassCtl
	{0x2c,0x2c},		// erBaseTrebleCtl
	{0x2d,0x2e},		// erChLimitSels
	{0x2f,0x32},		// erLim12Cfgs
	{0x33,0x36},		// erPwmTimings
	{0x37,0x3a},		// erI2sOutMaps
	{0x3b,0x4c},		// erCoefBlk
	{0x5a,0x5a},		// erExtLimitDrc
	{0x5b,0x5b},		// erFineVol
	{0x5d,0x6a},		// erPcmRecomb
	{0x6b,0x6e},		// erExtLimitBlk
	{0x6f,0x70},		// erRmsCtlBlk
	{0x71,0x75},		// erPllCtlBlk
	{0x76,0x76},		// erPllSts
	{0x77,0x79},		// erExtBiquadBlk
	{0x7a,0x7d},		// erRmsStatusBlk
	{0x80,0x80},		// erDpt
	{0x81,0x81},		// erCfr129
	{0x82,0x83},		// erPopSuppresTimes
};

bqCoefBlk_t ApBqFile[] = {
	//Biquad filter file:
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch0, Bq0
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch0, Bq1
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch0, Bq2
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch0, Bq3
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch0, Bq4
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch0, Bq5
	{{0xa4,0x18,0xca},{0x56,0x67,0xb6},{0x5b,0xe7,0x36},{0x98,0x51,0x32},{0x48,0xa3,0x8b}},// Ch0, Bq6
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch0, Bq7
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch0, Bq8
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch0, Bq9
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch1, Bq0
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch1, Bq1
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch1, Bq2
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch1, Bq3
	{{0xa4,0x18,0xca},{0x56,0x67,0xb6},{0x5b,0xe7,0x36},{0x98,0x51,0x32},{0x48,0xa3,0x8b}},// Ch1, Bq4
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch1, Bq5
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch1, Bq6
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch1, Bq7
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch1, Bq8
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch1, Bq9
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch2, Bq0
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch2, Bq1
	{{0xa4,0x18,0xca},{0x56,0x67,0xb6},{0x5b,0xe7,0x36},{0x98,0x51,0x32},{0x48,0xa3,0x8b}},// Ch2, Bq2
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch2, Bq3
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch2, Bq4
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch2, Bq5
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch2, Bq6
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch2, Bq7
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch2, Bq8
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch2, Bq9
	{{0xa4,0x18,0xca},{0x56,0x67,0xb6},{0x5b,0xe7,0x36},{0x98,0x51,0x32},{0x48,0xa3,0x8b}},// Ch3, Bq0
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch3, Bq1
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch3, Bq2
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch3, Bq3
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch3, Bq4
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch3, Bq5
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch3, Bq6
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch3, Bq7
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch3, Bq8
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch3, Bq9
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch4, Bq0
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch4, Bq1
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch4, Bq2
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch4, Bq3
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch4, Bq4
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch4, Bq5
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch4, Bq6
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch4, Bq7
	{{0xa4,0x18,0xca},{0x56,0x67,0xb6},{0x5b,0xe7,0x36},{0x98,0x51,0x32},{0x48,0xa3,0x8b}},// Ch4, Bq8
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch4, Bq9
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch5, Bq0
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch5, Bq1
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch5, Bq2
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch5, Bq3
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch5, Bq4
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch5, Bq5
	{{0xa4,0x18,0xca},{0x56,0x67,0xb6},{0x5b,0xe7,0x36},{0x98,0x51,0x32},{0x48,0xa3,0x8b}},// Ch5, Bq6
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch5, Bq7
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch5, Bq8
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch5, Bq9
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch6, Bq0
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch6, Bq1
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch6, Bq2
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch6, Bq3
	{{0xa4,0x18,0xca},{0x56,0x67,0xb6},{0x5b,0xe7,0x36},{0x98,0x51,0x32},{0x48,0xa3,0x8b}},// Ch6, Bq4
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch6, Bq5
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch6, Bq6
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch6, Bq7
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch6, Bq8
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch6, Bq9
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch7, Bq0
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch7, Bq1
	{{0xa4,0x18,0xca},{0x56,0x67,0xb6},{0x5b,0xe7,0x36},{0x98,0x51,0x32},{0x48,0xa3,0x8b}},// Ch7, Bq2
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch7, Bq3
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch7, Bq4
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch7, Bq5
	{{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x00,0x00,0x00},{0x40,0x00,0x00}},// Ch7, Bq6
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch7, Bq7
	{{0x80,0x37,0xd9},{0x7f,0xc8,0x27},{0x7f,0xc8,0x1b},{0x80,0x6f,0x98},{0x3f,0xe4,0x13}},// Ch7, Bq8
	{{0x09,0x3e,0xc0},{0x09,0x3e,0xc0},{0x46,0xfc,0xc7},{0xcd,0x0b,0x6e},{0x04,0x9f,0x60}},// Ch7, Bq9
};

rawCoef_t ApPrescalerFile[] = {
	//Prescaler File
	{0x7f,0xff,0xff}, // Ch0 pre-scaler
	{0x7f,0xff,0xff}, // Ch1 pre-scaler
	{0x7f,0xff,0xff}, // Ch2 pre-scaler
	{0x7f,0xff,0xff}, // Ch3 pre-scaler
	{0x7f,0xff,0xff}, // Ch4 pre-scaler
	{0x7f,0xff,0xff}, // Ch5 pre-scaler
	{0x7f,0xff,0xff}, // Ch6 pre-scaler
	{0x7f,0xff,0xff}, // Ch7 pre-scaler
};

rawCoef_t ApPostscalerFile[] = {
	//Postscaler File
	{0x7f,0xff,0xff}, // Ch0 post-scaler
	{0x7f,0xff,0xff}, // Ch1 post-scaler
	{0x7f,0xff,0xff}, // Ch2 post-scaler
	{0x7f,0xff,0xff}, // Ch3 post-scaler
	{0x7f,0xff,0xff}, // Ch4 post-scaler
	{0x7f,0xff,0xff}, // Ch5 post-scaler
	{0x7f,0xff,0xff}, // Ch6 post-scaler
	{0x7f,0xff,0xff}, // Ch7 post-scaler

};
                                             
rawCoef_t ApMixer1File[] = {
	//Mixer1 File
	{0x7f,0xff,0xff}, // Cho 0 Mixer1 Chi 0
	{0x00,0x00,0x00}, // Cho 0 Mixer1 Chi 1
	{0x00,0x00,0x00}, // Cho 0 Mixer1 Chi 2
	{0x00,0x00,0x00}, // Cho 0 Mixer1 Chi 3
	{0x00,0x00,0x00}, // Cho 0 Mixer1 Chi 4
	{0x00,0x00,0x00}, // Cho 0 Mixer1 Chi 5
	{0x00,0x00,0x00}, // Cho 0 Mixer1 Chi 6
	{0x00,0x00,0x00}, // Cho 0 Mixer1 Chi 7
	{0x00,0x00,0x00}, // Cho 1 Mixer1 Chi 0
	{0x7f,0xff,0xff}, // Cho 1 Mixer1 Chi 1
	{0x00,0x00,0x00}, // Cho 1 Mixer1 Chi 2
	{0x00,0x00,0x00}, // Cho 1 Mixer1 Chi 3
	{0x00,0x00,0x00}, // Cho 1 Mixer1 Chi 4
	{0x00,0x00,0x00}, // Cho 1 Mixer1 Chi 5
	{0x00,0x00,0x00}, // Cho 1 Mixer1 Chi 6
	{0x00,0x00,0x00}, // Cho 1 Mixer1 Chi 7
	{0x00,0x00,0x00}, // Cho 2 Mixer1 Chi 0
	{0x00,0x00,0x00}, // Cho 2 Mixer1 Chi 1
	{0x7f,0xff,0xff}, // Cho 2 Mixer1 Chi 2
	{0x00,0x00,0x00}, // Cho 2 Mixer1 Chi 3
	{0x00,0x00,0x00}, // Cho 2 Mixer1 Chi 4
	{0x00,0x00,0x00}, // Cho 2 Mixer1 Chi 5
	{0x00,0x00,0x00}, // Cho 2 Mixer1 Chi 6
	{0x00,0x00,0x00}, // Cho 2 Mixer1 Chi 7
	{0x00,0x00,0x00}, // Cho 3 Mixer1 Chi 0
	{0x00,0x00,0x00}, // Cho 3 Mixer1 Chi 1
	{0x00,0x00,0x00}, // Cho 3 Mixer1 Chi 2
	{0x7f,0xff,0xff}, // Cho 3 Mixer1 Chi 3
	{0x00,0x00,0x00}, // Cho 3 Mixer1 Chi 4
	{0x00,0x00,0x00}, // Cho 3 Mixer1 Chi 5
	{0x00,0x00,0x00}, // Cho 3 Mixer1 Chi 6
	{0x00,0x00,0x00}, // Cho 3 Mixer1 Chi 7
	{0x00,0x00,0x00}, // Cho 4 Mixer1 Chi 0
	{0x00,0x00,0x00}, // Cho 4 Mixer1 Chi 1
	{0x00,0x00,0x00}, // Cho 4 Mixer1 Chi 2
	{0x00,0x00,0x00}, // Cho 4 Mixer1 Chi 3
	{0x7f,0xff,0xff}, // Cho 4 Mixer1 Chi 4
	{0x00,0x00,0x00}, // Cho 4 Mixer1 Chi 5
	{0x00,0x00,0x00}, // Cho 4 Mixer1 Chi 6
	{0x00,0x00,0x00}, // Cho 4 Mixer1 Chi 7
	{0x00,0x00,0x00}, // Cho 5 Mixer1 Chi 0
	{0x00,0x00,0x00}, // Cho 5 Mixer1 Chi 1
	{0x00,0x00,0x00}, // Cho 5 Mixer1 Chi 2
	{0x00,0x00,0x00}, // Cho 5 Mixer1 Chi 3
	{0x00,0x00,0x00}, // Cho 5 Mixer1 Chi 4
	{0x7f,0xff,0xff}, // Cho 5 Mixer1 Chi 5
	{0x00,0x00,0x00}, // Cho 5 Mixer1 Chi 6
	{0x00,0x00,0x00}, // Cho 5 Mixer1 Chi 7
	{0x00,0x00,0x00}, // Cho 6 Mixer1 Chi 0
	{0x00,0x00,0x00}, // Cho 6 Mixer1 Chi 1
	{0x00,0x00,0x00}, // Cho 6 Mixer1 Chi 2
	{0x00,0x00,0x00}, // Cho 6 Mixer1 Chi 3
	{0x00,0x00,0x00}, // Cho 6 Mixer1 Chi 4
	{0x00,0x00,0x00}, // Cho 6 Mixer1 Chi 5
	{0x7f,0xff,0xff}, // Cho 6 Mixer1 Chi 6
	{0x00,0x00,0x00}, // Cho 6 Mixer1 Chi 7
	{0x00,0x00,0x00}, // Cho 7 Mixer1 Chi 0
	{0x00,0x00,0x00}, // Cho 7 Mixer1 Chi 1
	{0x00,0x00,0x00}, // Cho 7 Mixer1 Chi 2
	{0x00,0x00,0x00}, // Cho 7 Mixer1 Chi 3
	{0x00,0x00,0x00}, // Cho 7 Mixer1 Chi 4
	{0x00,0x00,0x00}, // Cho 7 Mixer1 Chi 5
	{0x00,0x00,0x00}, // Cho 7 Mixer1 Chi 6
	{0x7f,0xff,0xff}, // Cho 7 Mixer1 Chi 7
};

rawCoef_t ApMixer2File[] = {
	//Mixer2 File
	{0x7f,0xff,0xff}, // Cho 0 Mixer2 Chi 0
	{0x00,0x00,0x00}, // Cho 0 Mixer2 Chi 1
	{0x00,0x00,0x00}, // Cho 0 Mixer2 Chi 2
	{0x00,0x00,0x00}, // Cho 0 Mixer2 Chi 3
	{0x00,0x00,0x00}, // Cho 0 Mixer2 Chi 4
	{0x00,0x00,0x00}, // Cho 0 Mixer2 Chi 5
	{0x00,0x00,0x00}, // Cho 0 Mixer2 Chi 6
	{0x00,0x00,0x00}, // Cho 0 Mixer2 Chi 7
	{0x00,0x00,0x00}, // Cho 1 Mixer2 Chi 0
	{0x7f,0xff,0xff}, // Cho 1 Mixer2 Chi 1
	{0x00,0x00,0x00}, // Cho 1 Mixer2 Chi 2
	{0x00,0x00,0x00}, // Cho 1 Mixer2 Chi 3
	{0x00,0x00,0x00}, // Cho 1 Mixer2 Chi 4
	{0x00,0x00,0x00}, // Cho 1 Mixer2 Chi 5
	{0x00,0x00,0x00}, // Cho 1 Mixer2 Chi 6
	{0x00,0x00,0x00}, // Cho 1 Mixer2 Chi 7
	{0x00,0x00,0x00}, // Cho 2 Mixer2 Chi 0
	{0x00,0x00,0x00}, // Cho 2 Mixer2 Chi 1
	{0x7f,0xff,0xff}, // Cho 2 Mixer2 Chi 2
	{0x00,0x00,0x00}, // Cho 2 Mixer2 Chi 3
	{0x00,0x00,0x00}, // Cho 2 Mixer2 Chi 4
	{0x00,0x00,0x00}, // Cho 2 Mixer2 Chi 5
	{0x00,0x00,0x00}, // Cho 2 Mixer2 Chi 6
	{0x00,0x00,0x00}, // Cho 2 Mixer2 Chi 7
	{0x00,0x00,0x00}, // Cho 3 Mixer2 Chi 0
	{0x00,0x00,0x00}, // Cho 3 Mixer2 Chi 1
	{0x00,0x00,0x00}, // Cho 3 Mixer2 Chi 2
	{0x7f,0xff,0xff}, // Cho 3 Mixer2 Chi 3
	{0x00,0x00,0x00}, // Cho 3 Mixer2 Chi 4
	{0x00,0x00,0x00}, // Cho 3 Mixer2 Chi 5
	{0x00,0x00,0x00}, // Cho 3 Mixer2 Chi 6
	{0x00,0x00,0x00}, // Cho 3 Mixer2 Chi 7
	{0x00,0x00,0x00}, // Cho 4 Mixer2 Chi 0
	{0x00,0x00,0x00}, // Cho 4 Mixer2 Chi 1
	{0x00,0x00,0x00}, // Cho 4 Mixer2 Chi 2
	{0x00,0x00,0x00}, // Cho 4 Mixer2 Chi 3
	{0x7f,0xff,0xff}, // Cho 4 Mixer2 Chi 4
	{0x00,0x00,0x00}, // Cho 4 Mixer2 Chi 5
	{0x00,0x00,0x00}, // Cho 4 Mixer2 Chi 6
	{0x00,0x00,0x00}, // Cho 4 Mixer2 Chi 7
	{0x00,0x00,0x00}, // Cho 5 Mixer2 Chi 0
	{0x00,0x00,0x00}, // Cho 5 Mixer2 Chi 1
	{0x00,0x00,0x00}, // Cho 5 Mixer2 Chi 2
	{0x00,0x00,0x00}, // Cho 5 Mixer2 Chi 3
	{0x00,0x00,0x00}, // Cho 5 Mixer2 Chi 4
	{0x7f,0xff,0xff}, // Cho 5 Mixer2 Chi 5
	{0x00,0x00,0x00}, // Cho 5 Mixer2 Chi 6
	{0x00,0x00,0x00}, // Cho 5 Mixer2 Chi 7
	{0x00,0x00,0x00}, // Cho 6 Mixer2 Chi 0
	{0x00,0x00,0x00}, // Cho 6 Mixer2 Chi 1
	{0x00,0x00,0x00}, // Cho 6 Mixer2 Chi 2
	{0x00,0x00,0x00}, // Cho 6 Mixer2 Chi 3
	{0x00,0x00,0x00}, // Cho 6 Mixer2 Chi 4
	{0x00,0x00,0x00}, // Cho 6 Mixer2 Chi 5
	{0x7f,0xff,0xff}, // Cho 6 Mixer2 Chi 6
	{0x00,0x00,0x00}, // Cho 6 Mixer2 Chi 7
	{0x00,0x00,0x00}, // Cho 7 Mixer2 Chi 0
	{0x00,0x00,0x00}, // Cho 7 Mixer2 Chi 1
	{0x00,0x00,0x00}, // Cho 7 Mixer2 Chi 2
	{0x00,0x00,0x00}, // Cho 7 Mixer2 Chi 3
	{0x00,0x00,0x00}, // Cho 7 Mixer2 Chi 4
	{0x00,0x00,0x00}, // Cho 7 Mixer2 Chi 5
	{0x00,0x00,0x00}, // Cho 7 Mixer2 Chi 6
	{0x7f,0xff,0xff}, // Cho 7 Mixer2 Chi 7
};
                                             
#endif //INSTANTIATE_AP_DATA

extern void ApDumpRegFile (void);
extern void ApReadBiquad (uint8_t chNo, uint8_t bqNo, bqCoefBlk_t *pbq);
extern void ApDumpRawCoef (rawCoef_t *pBqCoef, const char* pref, const char* postf);
extern void ApDumpBiquad (uint8_t chNo, uint8_t bqNo);
extern void ApDumpBiquadFile (void);
extern void ApLoadRegRange (uint8_t Bgn, uint8_t End, uint8_t *pRegFileData);
extern void ApLoadBiquadFile (void);
extern void ApReadRawCoefBlk (uint16_t blkAddr, rawCoef_t *buf, uint8_t count);
extern void ApWriteOneRawCoef (uint16_t ramAddr, rawCoef_t *buf);
extern void ApWriteRawCoefBlk (uint16_t blkAddr, rawCoef_t *buf, uint8_t count);
extern void ApDumpPrescaleFile (void);
extern void ApDumpPostscaleFile (void);
extern void ApDumpMixer1File (void);
extern void ApDumpMixer2File (void);
extern void ApLoadPrescalerFile (void);
extern void ApLoadPostscalerFile (void);
extern void ApLoadMixer1File (void);
extern void ApLoadMixer2File (void);
extern void ApDumpParameterFiles(void);
#if VERIFY_LOADS
extern BOOL ApVerifyRegRangeLoad (uint8_t Bgn, uint8_t End, uint8_t *pRegFileData);
extern BOOL ApVerifyBiquadFileLoad (void);
extern BOOL ApVerifyPrescalerFileLoad (void);
extern BOOL ApVerifyPrescalerFileLoad (void);
extern BOOL ApVerifyLoadPostscalerFileLoad (void);
extern BOOL ApVerifyLoadMixer1FileLoad (void);
extern BOOL ApVerifyLoadMixer2FileLoad (void);
#endif //VERIFY_LOADS

extern void ApInitialize (void);
extern void ApI2sOutputEnable (BOOL bEnable);

#ifdef __cplusplus
}
#endif //

#endif //_APCONTROL_H_
